{"version":3,"sources":["component/ScoreBoard.js","component/Card.js","component/CardGrid.js","component/EndGame.js","component/Game.js","App.js","index.js"],"names":["ScoreBoard","props","className","role","score","highScore","Card","src","index","onClick","selectPokemon","name","style","width","cursor","ßalt","CardGrids","cards","pokeNames","map","poke","EndGame","textColor","gameRestart","Game","localStorage","getItem","useState","setScore","SetPokemNames","selectedNames","setSelectedNames","gameOver","setGameOver","useEffect","a","axios","get","res","pokes","data","results","names","getImages","CardGrid","includes","setItem","length","array","i","j","Math","floor","random","temp","shuffle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40c19e8a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ScoreBoard = (props) => {\n  return (\n    <div>\n      <div className=\"alert alert-dark text-center\" role=\"alert\">\n        Get points by clicking on an image but don't click on any one more than\n        once!\n      </div>\n      <div className=\"d-flex justify-content-center my-4\">\n        <h4 className=\"mr-4\"> Score: {props.score}</h4>\n        <h4>High Score: {props.highScore}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default ScoreBoard;\n","import React from \"react\";\n\nconst Card = (props) => {\n  const src = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${props.index}.png`;\n  const handleSelect = () => {\n    props.selectPokemon(props.name);\n  };\n  return (\n    <div className=\" col-6 col-md-3\" onClick={handleSelect}>\n      <div\n        className=\"card mt-4 shadow rounded\"\n        style={{ width: \"14rem\", cursor: \"pointer\" }}\n      >\n        <img className=\"card-img-top\" src={src} ßalt={props.name} />\n        <div className=\"card-body\">\n          <h4 className=\"card-text text-info text-center\">{props.name}</h4>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport Card from \"./Card\";\n\nconst CardGrids = (props) => {\n  const cards = props.pokeNames.map((poke) => (\n    <Card\n      name={poke.poke}\n      index={poke.index + 1}\n      selectPokemon={props.selectPokemon}\n      key={poke.index}\n    />\n  ));\n\n  return (\n    <div className=\"container pb-5\">\n      <div className=\"row\">{cards}</div>\n    </div>\n  );\n};\n\nexport default CardGrids;\n","import React from \"react\";\n\nconst EndGame = (props) => {\n  const textColor =\n    props.score > props.highScore ? \"text-success\" : \"text-danger\";\n\n  return (\n    <div className=\"jumbotron jumbotron-fluid text-center\">\n      <div className=\"container\">\n        <h1 className={textColor}>Game Over!</h1>\n        <p className=\"lead\">Your Score is {props.score}</p>\n        <button className=\"btn btn-info\" onClick={props.gameRestart}>\n          Play Again\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default EndGame;\n","import React, { useState, useEffect } from \"react\";\nimport ScoreBoard from \"./ScoreBoard\";\nimport axios from \"axios\";\nimport CardGrids from \"./CardGrid\";\nimport EndGame from \"./EndGame\";\n\nconst Game = () => {\n  const highScore = localStorage.getItem(\"highestScore\")\n    ? localStorage.getItem(\"highestScore\")\n    : 0;\n  const [score, setScore] = useState(0);\n  const [pokeNames, SetPokemNames] = useState([]);\n  const [selectedNames, setSelectedNames] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n\n  function shuffle(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n  const gameRestart = () => {\n    setGameOver(!gameOver);\n    setScore(0);\n    setSelectedNames([]);\n  };\n\n  const selectPokemon = (name) => {\n    if (selectedNames.includes(name)) {\n      highScore < score && localStorage.setItem(\"highestScore\", score);\n      setGameOver(!gameOver);\n    } else {\n      setSelectedNames([...selectedNames, name]);\n      setScore(selectedNames.length + 1);\n\n      SetPokemNames(shuffle(pokeNames));\n    }\n  };\n\n  useEffect(() => {\n    const getImages = async () => {\n      let res = await axios.get(\"https://pokeapi.co/api/v2/pokemon?limit=32\");\n      let pokes = res.data.results;\n\n      let names = pokes.map((poke, index) => ({ poke: poke.name, index }));\n\n      SetPokemNames(names);\n    };\n    getImages();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"text-center py-4 display-3 text-secondary\">\n        Memory Game!\n      </h1>\n      {gameOver ? (\n        <EndGame\n          score={score}\n          highScore={highScore}\n          gameRestart={gameRestart}\n        />\n      ) : (\n        <div>\n          <ScoreBoard score={score} highScore={highScore} />\n          <CardGrids pokeNames={pokeNames} selectPokemon={selectPokemon} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Game;\n","import React, { useState } from \"react\";\nimport Game from \"./component/Game\";\n\nfunction App() {\n  return (\n    <div className=\"App bg-light\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}